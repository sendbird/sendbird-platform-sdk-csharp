/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using sendbird_platform_sdk.Client;
using sendbird_platform_sdk.Api;
using sendbird_platform_sdk.Model;

namespace sendbird_platform_sdk.Test
{
    /// <summary>
    ///  Class for testing AnnouncementApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AnnouncementApiTests
    {
        private AnnouncementApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AnnouncementApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AnnouncementApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' AnnouncementApi
            //Assert.IsInstanceOf(typeof(AnnouncementApi), instance);
        }

        
        /// <summary>
        /// Test ScheduleAnAnnouncement
        /// </summary>
        [Test]
        public void ScheduleAnAnnouncementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //ScheduleAnAnnouncementRequest scheduleAnAnnouncementRequest = null;
            //var response = instance.ScheduleAnAnnouncement(apiToken, scheduleAnAnnouncementRequest);
            //Assert.IsInstanceOf(typeof(ScheduleAnAnnouncementResponse), response, "response is ScheduleAnAnnouncementResponse");
        }
        
    }

}
