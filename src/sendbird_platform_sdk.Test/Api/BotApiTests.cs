/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using sendbird_platform_sdk.Client;
using sendbird_platform_sdk.Api;
using sendbird_platform_sdk.Model;

namespace sendbird_platform_sdk.Test
{
    /// <summary>
    ///  Class for testing BotApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BotApiTests
    {
        private BotApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BotApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BotApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' BotApi
            //Assert.IsInstanceOf(typeof(BotApi), instance);
        }

        
        /// <summary>
        /// Test CreateABot
        /// </summary>
        [Test]
        public void CreateABotTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiToken = null;
            //CreateABotRequest createABotRequest = null;
            //var response = instance.CreateABot(apiToken, createABotRequest);
            //Assert.IsInstanceOf(typeof(CreateABotResponse), response, "response is CreateABotResponse");
        }
        
        /// <summary>
        /// Test JoinChannels
        /// </summary>
        [Test]
        public void JoinChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //JoinChannelsRequest joinChannelsRequest = null;
            //var response = instance.JoinChannels(botUserid, apiToken, joinChannelsRequest);
            //Assert.IsInstanceOf(typeof(SendbirdGroupChannelDetail), response, "response is SendbirdGroupChannelDetail");
        }
        
        /// <summary>
        /// Test LeaveAGroupChannel
        /// </summary>
        [Test]
        public void LeaveAGroupChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelUrl = null;
            //string botUserid = null;
            //string apiToken = null;
            //var response = instance.LeaveAGroupChannel(channelUrl, botUserid, apiToken);
            //Assert.IsInstanceOf(typeof(Object), response, "response is Object");
        }
        
        /// <summary>
        /// Test LeaveGroupChannels
        /// </summary>
        [Test]
        public void LeaveGroupChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //var response = instance.LeaveGroupChannels(botUserid, apiToken);
            //Assert.IsInstanceOf(typeof(Object), response, "response is Object");
        }
        
        /// <summary>
        /// Test ListBots
        /// </summary>
        [Test]
        public void ListBotsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string token = null;
            //int? limit = null;
            //string apiToken = null;
            //var response = instance.ListBots(token, limit, apiToken);
            //Assert.IsInstanceOf(typeof(ListBotsResponse), response, "response is ListBotsResponse");
        }
        
        /// <summary>
        /// Test SendABotMessage
        /// </summary>
        [Test]
        public void SendABotMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string botUserid = null;
            //string apiToken = null;
            //SendABotMessageRequest sendABotMessageRequest = null;
            //var response = instance.SendABotMessage(botUserid, apiToken, sendABotMessageRequest);
            //Assert.IsInstanceOf(typeof(SendbirdMessageResponse), response, "response is SendbirdMessageResponse");
        }
        
    }

}
