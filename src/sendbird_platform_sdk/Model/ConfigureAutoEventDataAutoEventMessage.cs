/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = sendbird_platform_sdk.Client.OpenAPIDateConverter;

namespace sendbird_platform_sdk.Model
{
    /// <summary>
    /// ConfigureAutoEventDataAutoEventMessage
    /// </summary>
    [DataContract]
    public partial class ConfigureAutoEventDataAutoEventMessage :  IEquatable<ConfigureAutoEventDataAutoEventMessage>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConfigureAutoEventDataAutoEventMessage" /> class.
        /// </summary>
        /// <param name="userLeave">userLeave.</param>
        /// <param name="userJoin">userJoin.</param>
        /// <param name="channelCreate">channelCreate.</param>
        /// <param name="channelChange">channelChange.</param>
        public ConfigureAutoEventDataAutoEventMessage(Object userLeave = default, Object userJoin = default, Object channelCreate = default, Object channelChange = default)
        {
            this.UserLeave = userLeave;
            this.UserJoin = userJoin;
            this.ChannelCreate = channelCreate;
            this.ChannelChange = channelChange;
        }

        /// <summary>
        /// Gets or Sets UserLeave
        /// </summary>
        [DataMember(Name="user_leave", EmitDefaultValue=false)]
        public Object UserLeave { get; set; }

        /// <summary>
        /// Gets or Sets UserJoin
        /// </summary>
        [DataMember(Name="user_join", EmitDefaultValue=false)]
        public Object UserJoin { get; set; }

        /// <summary>
        /// Gets or Sets ChannelCreate
        /// </summary>
        [DataMember(Name="channel_create", EmitDefaultValue=false)]
        public Object ChannelCreate { get; set; }

        /// <summary>
        /// Gets or Sets ChannelChange
        /// </summary>
        [DataMember(Name="channel_change", EmitDefaultValue=false)]
        public Object ChannelChange { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConfigureAutoEventDataAutoEventMessage {\n");
            sb.Append("  UserLeave: ").Append(UserLeave).Append("\n");
            sb.Append("  UserJoin: ").Append(UserJoin).Append("\n");
            sb.Append("  ChannelCreate: ").Append(ChannelCreate).Append("\n");
            sb.Append("  ChannelChange: ").Append(ChannelChange).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConfigureAutoEventDataAutoEventMessage);
        }

        /// <summary>
        /// Returns true if ConfigureAutoEventDataAutoEventMessage instances are equal
        /// </summary>
        /// <param name="input">Instance of ConfigureAutoEventDataAutoEventMessage to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConfigureAutoEventDataAutoEventMessage input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UserLeave == input.UserLeave ||
                    (this.UserLeave != null &&
                    this.UserLeave.Equals(input.UserLeave))
                ) && 
                (
                    this.UserJoin == input.UserJoin ||
                    (this.UserJoin != null &&
                    this.UserJoin.Equals(input.UserJoin))
                ) && 
                (
                    this.ChannelCreate == input.ChannelCreate ||
                    (this.ChannelCreate != null &&
                    this.ChannelCreate.Equals(input.ChannelCreate))
                ) && 
                (
                    this.ChannelChange == input.ChannelChange ||
                    (this.ChannelChange != null &&
                    this.ChannelChange.Equals(input.ChannelChange))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserLeave != null)
                    hashCode = hashCode * 59 + this.UserLeave.GetHashCode();
                if (this.UserJoin != null)
                    hashCode = hashCode * 59 + this.UserJoin.GetHashCode();
                if (this.ChannelCreate != null)
                    hashCode = hashCode * 59 + this.ChannelCreate.GetHashCode();
                if (this.ChannelChange != null)
                    hashCode = hashCode * 59 + this.ChannelChange.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
