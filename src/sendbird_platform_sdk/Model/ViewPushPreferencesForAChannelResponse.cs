/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = sendbird_platform_sdk.Client.OpenAPIDateConverter;

namespace sendbird_platform_sdk.Model
{
    /// <summary>
    /// ViewPushPreferencesForAChannelResponse
    /// </summary>
    [DataContract]
    public partial class ViewPushPreferencesForAChannelResponse :  IEquatable<ViewPushPreferencesForAChannelResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ViewPushPreferencesForAChannelResponse" /> class.
        /// </summary>
        /// <param name="enable">enable.</param>
        /// <param name="pushSound">pushSound.</param>
        /// <param name="pushTriggerOption">pushTriggerOption.</param>
        public ViewPushPreferencesForAChannelResponse(bool enable = default(bool), string pushSound = default(string), SendbirdPushTriggerOption pushTriggerOption = default(SendbirdPushTriggerOption))
        {
            this.Enable = enable;
            this.PushSound = pushSound;
            this.PushTriggerOption = pushTriggerOption;
        }

        /// <summary>
        /// Gets or Sets Enable
        /// </summary>
        [DataMember(Name="enable", EmitDefaultValue=false)]
        public bool Enable { get; set; }

        /// <summary>
        /// Gets or Sets PushSound
        /// </summary>
        [DataMember(Name="push_sound", EmitDefaultValue=false)]
        public string PushSound { get; set; }

        /// <summary>
        /// Gets or Sets PushTriggerOption
        /// </summary>
        [DataMember(Name="push_trigger_option", EmitDefaultValue=false)]
        public SendbirdPushTriggerOption PushTriggerOption { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ViewPushPreferencesForAChannelResponse {\n");
            sb.Append("  Enable: ").Append(Enable).Append("\n");
            sb.Append("  PushSound: ").Append(PushSound).Append("\n");
            sb.Append("  PushTriggerOption: ").Append(PushTriggerOption).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ViewPushPreferencesForAChannelResponse);
        }

        /// <summary>
        /// Returns true if ViewPushPreferencesForAChannelResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ViewPushPreferencesForAChannelResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ViewPushPreferencesForAChannelResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Enable == input.Enable ||
                    (this.Enable != null &&
                    this.Enable.Equals(input.Enable))
                ) && 
                (
                    this.PushSound == input.PushSound ||
                    (this.PushSound != null &&
                    this.PushSound.Equals(input.PushSound))
                ) && 
                (
                    this.PushTriggerOption == input.PushTriggerOption ||
                    (this.PushTriggerOption != null &&
                    this.PushTriggerOption.Equals(input.PushTriggerOption))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Enable != null)
                    hashCode = hashCode * 59 + this.Enable.GetHashCode();
                if (this.PushSound != null)
                    hashCode = hashCode * 59 + this.PushSound.GetHashCode();
                if (this.PushTriggerOption != null)
                    hashCode = hashCode * 59 + this.PushTriggerOption.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
