/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = sendbird_platform_sdk.Client.OpenAPIDateConverter;

namespace sendbird_platform_sdk.Model
{
    /// <summary>
    /// AddRegistrationOrDeviceTokenData
    /// </summary>
    [DataContract]
    public partial class AddRegistrationOrDeviceTokenData :  IEquatable<AddRegistrationOrDeviceTokenData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddRegistrationOrDeviceTokenData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AddRegistrationOrDeviceTokenData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AddRegistrationOrDeviceTokenData" /> class.
        /// </summary>
        /// <param name="gcmRegToken">Specifies a registration token for Firebase Cloud Messaging (formerly [Google Cloud Messaging](https://developers.google.com/cloud-messaging/)). (required).</param>
        /// <param name="huaweiDeviceToken">Specifies a device token for Huawei Mobile Services. (required).</param>
        /// <param name="apnsDeviceToken">Specifies a device token for Apple Push Notification Service. (required).</param>
        public AddRegistrationOrDeviceTokenData(string gcmRegToken = default, string huaweiDeviceToken = default, string apnsDeviceToken = default)
        {
            // to ensure "gcmRegToken" is required (not null)
            if (gcmRegToken == null)
            {
                throw new InvalidDataException("gcmRegToken is a required property for AddRegistrationOrDeviceTokenData and cannot be null");
            }
            else
            {
                this.GcmRegToken = gcmRegToken;
            }

            // to ensure "huaweiDeviceToken" is required (not null)
            if (huaweiDeviceToken == null)
            {
                throw new InvalidDataException("huaweiDeviceToken is a required property for AddRegistrationOrDeviceTokenData and cannot be null");
            }
            else
            {
                this.HuaweiDeviceToken = huaweiDeviceToken;
            }

            // to ensure "apnsDeviceToken" is required (not null)
            if (apnsDeviceToken == null)
            {
                throw new InvalidDataException("apnsDeviceToken is a required property for AddRegistrationOrDeviceTokenData and cannot be null");
            }
            else
            {
                this.ApnsDeviceToken = apnsDeviceToken;
            }

        }

        /// <summary>
        /// Specifies a registration token for Firebase Cloud Messaging (formerly [Google Cloud Messaging](https://developers.google.com/cloud-messaging/)).
        /// </summary>
        /// <value>Specifies a registration token for Firebase Cloud Messaging (formerly [Google Cloud Messaging](https://developers.google.com/cloud-messaging/)).</value>
        [DataMember(Name="gcm_reg_token", EmitDefaultValue=true)]
        public string GcmRegToken { get; set; }

        /// <summary>
        /// Specifies a device token for Huawei Mobile Services.
        /// </summary>
        /// <value>Specifies a device token for Huawei Mobile Services.</value>
        [DataMember(Name="huawei_device_token", EmitDefaultValue=true)]
        public string HuaweiDeviceToken { get; set; }

        /// <summary>
        /// Specifies a device token for Apple Push Notification Service.
        /// </summary>
        /// <value>Specifies a device token for Apple Push Notification Service.</value>
        [DataMember(Name="apns_device_token", EmitDefaultValue=true)]
        public string ApnsDeviceToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AddRegistrationOrDeviceTokenData {\n");
            sb.Append("  GcmRegToken: ").Append(GcmRegToken).Append("\n");
            sb.Append("  HuaweiDeviceToken: ").Append(HuaweiDeviceToken).Append("\n");
            sb.Append("  ApnsDeviceToken: ").Append(ApnsDeviceToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AddRegistrationOrDeviceTokenData);
        }

        /// <summary>
        /// Returns true if AddRegistrationOrDeviceTokenData instances are equal
        /// </summary>
        /// <param name="input">Instance of AddRegistrationOrDeviceTokenData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddRegistrationOrDeviceTokenData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.GcmRegToken == input.GcmRegToken ||
                    (this.GcmRegToken != null &&
                    this.GcmRegToken.Equals(input.GcmRegToken))
                ) && 
                (
                    this.HuaweiDeviceToken == input.HuaweiDeviceToken ||
                    (this.HuaweiDeviceToken != null &&
                    this.HuaweiDeviceToken.Equals(input.HuaweiDeviceToken))
                ) && 
                (
                    this.ApnsDeviceToken == input.ApnsDeviceToken ||
                    (this.ApnsDeviceToken != null &&
                    this.ApnsDeviceToken.Equals(input.ApnsDeviceToken))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GcmRegToken != null)
                    hashCode = hashCode * 59 + this.GcmRegToken.GetHashCode();
                if (this.HuaweiDeviceToken != null)
                    hashCode = hashCode * 59 + this.HuaweiDeviceToken.GetHashCode();
                if (this.ApnsDeviceToken != null)
                    hashCode = hashCode * 59 + this.ApnsDeviceToken.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
