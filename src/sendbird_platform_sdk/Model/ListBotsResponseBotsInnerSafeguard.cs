/*
 * Sendbird Platform SDK
 *
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = sendbird_platform_sdk.Client.OpenAPIDateConverter;

namespace sendbird_platform_sdk.Model
{
    /// <summary>
    /// ListBotsResponseBotsInnerSafeguard
    /// </summary>
    [DataContract]
    public partial class ListBotsResponseBotsInnerSafeguard :  IEquatable<ListBotsResponseBotsInnerSafeguard>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListBotsResponseBotsInnerSafeguard" /> class.
        /// </summary>
        /// <param name="bannedPhrases">bannedPhrases.</param>
        /// <param name="enabled">enabled.</param>
        /// <param name="message">message.</param>
        /// <param name="piiMasking">piiMasking.</param>
        public ListBotsResponseBotsInnerSafeguard(List<Object> bannedPhrases = default(List<Object>), bool enabled = default(bool), string message = default(string), bool piiMasking = default(bool))
        {
            this.BannedPhrases = bannedPhrases;
            this.Enabled = enabled;
            this.Message = message;
            this.PiiMasking = piiMasking;
        }

        /// <summary>
        /// Gets or Sets BannedPhrases
        /// </summary>
        [DataMember(Name="banned_phrases", EmitDefaultValue=false)]
        public List<Object> BannedPhrases { get; set; }

        /// <summary>
        /// Gets or Sets Enabled
        /// </summary>
        [DataMember(Name="enabled", EmitDefaultValue=false)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets PiiMasking
        /// </summary>
        [DataMember(Name="pii_masking", EmitDefaultValue=false)]
        public bool PiiMasking { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ListBotsResponseBotsInnerSafeguard {\n");
            sb.Append("  BannedPhrases: ").Append(BannedPhrases).Append("\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  PiiMasking: ").Append(PiiMasking).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ListBotsResponseBotsInnerSafeguard);
        }

        /// <summary>
        /// Returns true if ListBotsResponseBotsInnerSafeguard instances are equal
        /// </summary>
        /// <param name="input">Instance of ListBotsResponseBotsInnerSafeguard to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ListBotsResponseBotsInnerSafeguard input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BannedPhrases == input.BannedPhrases ||
                    this.BannedPhrases != null &&
                    input.BannedPhrases != null &&
                    this.BannedPhrases.SequenceEqual(input.BannedPhrases)
                ) && 
                (
                    this.Enabled == input.Enabled ||
                    (this.Enabled != null &&
                    this.Enabled.Equals(input.Enabled))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.PiiMasking == input.PiiMasking ||
                    (this.PiiMasking != null &&
                    this.PiiMasking.Equals(input.PiiMasking))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BannedPhrases != null)
                    hashCode = hashCode * 59 + this.BannedPhrases.GetHashCode();
                if (this.Enabled != null)
                    hashCode = hashCode * 59 + this.Enabled.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.PiiMasking != null)
                    hashCode = hashCode * 59 + this.PiiMasking.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
